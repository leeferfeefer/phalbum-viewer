[{"/Users/leefer_feefer/workspace/phalbum-viewer/src/App.js":"1","/Users/leefer_feefer/workspace/phalbum-viewer/src/service/Axios.service.js":"2","/Users/leefer_feefer/workspace/phalbum-viewer/src/index.js":"3","/Users/leefer_feefer/workspace/phalbum-viewer/src/model/Image.js":"4","/Users/leefer_feefer/workspace/phalbum-viewer/src/component/ImageGallery.js":"5","/Users/leefer_feefer/workspace/phalbum-viewer/src/reportWebVitals.js":"6"},{"size":4810,"mtime":1611699899229,"results":"7","hashOfConfig":"8"},{"size":356,"mtime":1611626239718,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1610069459870,"results":"10","hashOfConfig":"8"},{"size":1238,"mtime":1610592063369,"results":"11","hashOfConfig":"8"},{"size":2731,"mtime":1611699941685,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1610069459874,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lqi1fx",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/leefer_feefer/workspace/phalbum-viewer/src/App.js",["30","31"],"/Users/leefer_feefer/workspace/phalbum-viewer/src/service/Axios.service.js",["32"],"/Users/leefer_feefer/workspace/phalbum-viewer/src/index.js",[],["33","34"],"/Users/leefer_feefer/workspace/phalbum-viewer/src/model/Image.js",["35"],"\nconst convertImagesDTOToImages = async (imageDTOArray) => {\n    const images = [];\n    for (const image of imageDTOArray) {          \n        images.push({\n            original: image.imageBase64,\n            thumbnail: await _resizeImage(image.imageBase64, 50, 50)\n        })\n    }\n\n    return images;\n}\n\nconst _resizeImage = (base64Str, maxWidth = 400, maxHeight = 350) => {\n    return new Promise((resolve) => {\n      let img = new Image()\n      img.src = base64Str\n      img.onload = () => {\n        let canvas = document.createElement('canvas')\n        const MAX_WIDTH = maxWidth\n        const MAX_HEIGHT = maxHeight\n        let width = img.width\n        let height = img.height\n  \n        if (width > height) {\n          if (width > MAX_WIDTH) {\n            height *= MAX_WIDTH / width\n            width = MAX_WIDTH\n          }\n        } else {\n          if (height > MAX_HEIGHT) {\n            width *= MAX_HEIGHT / height\n            height = MAX_HEIGHT\n          }\n        }\n        canvas.width = width\n        canvas.height = height\n        let ctx = canvas.getContext('2d')\n        ctx.drawImage(img, 0, 0, width, height)\n        resolve(canvas.toDataURL())\n      }\n    })\n  }\n\n\nexport default {\n    convertImagesDTOToImages\n}",["36","37"],"/Users/leefer_feefer/workspace/phalbum-viewer/src/component/ImageGallery.js",["38","39","40"],"/Users/leefer_feefer/workspace/phalbum-viewer/src/reportWebVitals.js",[],["41","42"],{"ruleId":"43","severity":1,"message":"44","line":2,"column":14,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":24,"column":6,"nodeType":"49","endLine":24,"endColumn":8,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":14,"column":1,"nodeType":"53","endLine":16,"endColumn":2},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"51","severity":1,"message":"52","line":46,"column":1,"nodeType":"53","endLine":48,"endColumn":2},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":14,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"47","severity":1,"message":"60","line":39,"column":8,"nodeType":"49","endLine":39,"endColumn":10,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":72,"column":9,"nodeType":"64","endLine":85,"endColumn":11},{"ruleId":"54","replacedBy":"65"},{"ruleId":"56","replacedBy":"66"},"no-unused-vars","'jsx' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.","ArrayExpression",["67"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.",["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["68"],["69"],{"desc":"71","fix":"72"},"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [getImages]",{"range":"75","text":"76"},"Update the dependencies array to be: [startTimer]",{"range":"77","text":"78"},[914,916],"[getImages]",[1258,1260],"[startTimer]"]